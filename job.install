<?php
/*
 *      job.install
 *      
 *      Copyright 2014 Sammy Fung <sammy@sammy.hk>
 *      
 */

function job_schema() {
  $schema['company'] = array(
    'description' => t('The table for company information.'),
    'fields' => array(
      'nid' => array(
        'description' => t('The primary identifier for a node.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE),
      'vid' => array(
        'description' => t('The current {node_revisions}.vid version identifier.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'description' => array(
        'description' => t('Description of Company.'),
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big'),
      'phone' => array(
        'description' => t('Phone Number of Company.'),
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => ''),
      'fax' => array(
        'description' => t('Fax Number of Company.'),
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => ''),
      'email' => array(
        'description' => t('Email of Company.'),
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => ''),      
      'website' => array(
        'description' => t('Website URL of Company.'),
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => ''), 
      'person'  => array(
        'description' => t('Contact Person.'),
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => ''),      
      ),
    'indexes' => array(
      'phone' => array('phone'),
      'fax' => array('fax'),
      ),
    'unique keys' => array(
      'nid_vid' => array('nid', 'vid'),
      'vid'     => array('vid')
      ),
    'primary key' => array('nid'),
  );  
  $schema['job'] = array(
    'description' => t('The table for job posts.'),
    'fields' => array(
      'nid' => array(
        'description' => t('The primary identifier for a node.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE),
      'vid' => array(
        'description' => t('The current {node_revisions}.vid version identifier.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'company' => array(
        'description' => t('Company ID.'),
        'type' => 'int',
        'unsigned' => TRUE),        
      'requirement' => array(
        'description' => t('Job Requirement.'),
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big'),
      'description' => array(
        'description' => t('Job Description.'),
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big'),
      'application' => array(
        'description' => t('Job Application.'),
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big'),
      ),
    'indexes' => array(
      'company' => array('company'),
      ),
    'unique keys' => array(
      'nid_vid' => array('nid', 'vid'),
      'vid'     => array('vid')
      ),
    'primary key' => array('nid'),
  );  
  return $schema;
}

function job_install() {
  variable_set("comment_company", 1);
  variable_set("comment_job", 1);
  variable_set("node_options_company", array("status"));
  variable_set("node_options_job", array("status"));
}

function job_enable() {
  field_associate_fields('taxonomy');

  // Create the company vocabulary if it does not exist.
  $vocabulary = taxonomy_vocabulary_load(variable_get('job_vocabulary_companycategory', 0));  
  if (!$vocabulary) {
    $edit = array(
      'name' => t('Company Category'),
      'machine_name' => 'company_category',
      'description' => t('Category of company'),
      'hierarchy' => 1,
      'module' => 'job',
      'weight' => -10,
    );
    $vocabulary = (object) $edit;
    taxonomy_vocabulary_save($vocabulary);
    variable_set('job_vocabulary_companycategory', $vocabulary->vid);
    $field = array(
      'field_name' => 'field_companycategory',
      'type' => 'taxonomy_term_reference',
      'settings' => array(
        'allowed_values' => array(
          array(
            'vocabulary' => $vocabulary->machine_name,
            'parent' => 0
          ),
        ),
      ),
    );
    field_create_field($field);
    $instance = array(
      'field_name' => 'field_companycategory',
      'entity_type' => 'node',
      'label' => 'Company Category',
      'bundle' => 'company',
      'required' => false,
      'widget' => array(
        'type' => 'options_select'
      ),
      'display' => array(
        'teaser' => array('type' => 'hidden')
      )
    );
    field_create_instance($instance);
  }
  
  // Create the location vocabulary if it does not exist.
  $vocabulary = taxonomy_vocabulary_load(variable_get('job_vocabulary_companylocation', 0));  
  if (!$vocabulary) {
    $edit = array(
      'name' => t('Company Location'),
      'machine_name' => 'company_location',
      'description' => t('Location of company'),
      'hierarchy' => 1,
      'module' => 'job',
      'weight' => -10,
    );
    $vocabulary = (object) $edit;
    taxonomy_vocabulary_save($vocabulary);
    variable_set('job_vocabulary_companylocation', $vocabulary->vid);
    $field = array(
      'field_name' => 'field_companylocation',
      'type' => 'taxonomy_term_reference',
      'settings' => array(
        'allowed_values' => array(
          array(
            'vocabulary' => $vocabulary->machine_name,
            'parent' => 0
          ),
        ),
      ),
    );
    field_create_field($field);
    $instance = array(
      'field_name' => 'field_companylocation',
      'entity_type' => 'node',
      'label' => 'Company Location',
      'bundle' => 'company',
      'required' => false,
      'widget' => array(
        'type' => 'options_select'
      ),
      'display' => array(
        'teaser' => array('type' => 'hidden')
      )
    );
    field_create_instance($instance);
  }
  
  // Create the job type vocabulary if it does not exist.
  $vocabulary = taxonomy_vocabulary_load(variable_get('job_vocabulary_jobtype', 0));  
  if (!$vocabulary) {
    $edit = array(
      'name' => t('Job Type'),
      'machine_name' => 'job_type',
      'description' => t('Type of job'),
      'hierarchy' => 1,
      'module' => 'job',
      'weight' => -10,
    );
    $vocabulary = (object) $edit;
    taxonomy_vocabulary_save($vocabulary);
    variable_set('job_vocabulary_jobtype', $vocabulary->vid);
    $field = array(
      'field_name' => 'field_jobtype',
      'type' => 'taxonomy_term_reference',
      'settings' => array(
        'allowed_values' => array(
          array(
            'vocabulary' => $vocabulary->machine_name,
            'parent' => 0
          ),
        ),
      ),
    );
    field_create_field($field);
    $instance = array(
      'field_name' => 'field_jobtype',
      'entity_type' => 'node',
      'label' => 'Job Type',
      'bundle' => 'job',
      'required' => false,
      'widget' => array(
        'type' => 'options_select'
      ),
      'display' => array(
        'default' => array('type' => 'inline'),
        'teaser' => array('type' => 'hidden')
      )
    );
    field_create_instance($instance);
    // Add Permanent, Part Time, Contract to this vocabulary.
    $type = array('Permanent','Part Time','Contract');
    foreach ($type as $name) {
      $edit = array(
        'name' => t($name),
        'description' => '',
        'parent' => array(0),
        'vid' => $vocabulary->vid,
      );
      $term = (object) $edit;
      taxonomy_term_save($term);    
    }
  }

  // Create the job category vocabulary if it does not exist.
  $vocabulary = taxonomy_vocabulary_load(variable_get('job_vocabulary_jobcategory', 0));  
  if (!$vocabulary) {
    $edit = array(
      'name' => t('Job Category'),
      'machine_name' => 'job_category',
      'description' => t('Category of job'),
      'hierarchy' => 1,
      'module' => 'job',
      'weight' => -10,
    );
    $vocabulary = (object) $edit;
    taxonomy_vocabulary_save($vocabulary);
    variable_set('job_vocabulary_jobcategory', $vocabulary->vid);
    $field = array(
      'field_name' => 'field_jobcategory',
      'type' => 'taxonomy_term_reference',
      'settings' => array(
        'allowed_values' => array(
          array(
            'vocabulary' => $vocabulary->machine_name,
            'parent' => 0
          ),
        ),
      ),
    );
    field_create_field($field);
    $instance = array(
      'field_name' => 'field_jobcategory',
      'entity_type' => 'node',
      'label' => 'Job Category',
      'bundle' => 'job',
      'required' => true,
      'widget' => array(
        'type' => 'options_select'
      ),
      'display' => array(
        'teaser' => array('type' => 'hidden')
      )
    );
    field_create_instance($instance);
    // Add suggested job category to this vocabulary.
    $category = array('Accounting', 'Admin & Secretarial', 'Banking & Finance', 'Building & Architectural', 'Business Development', 'Catering', 
      'Customer Service', 'Design', 'Education', 'Engineering', 'Hotel & Tourism', 'Health & Beauty Care', 'Human Resources', 
      'Information Technology', 'Insurance', 'Legal & Company Secretary', 'Logistics', 'Manufacturing', 'Marketing & Public Relations', 
      'Media', 'Medical & Pharmaceutical', 'Merchandising', 'Property & Real Estate', 'Purchasing', 'Sales', 'Translation', 
      'Transportation & Shipping', 'Others');
    foreach ($category as $name) {
      $edit = array(
        'name' => t($name),
        'description' => '',
        'parent' => array(0),
        'vid' => $vocabulary->vid,
      );
      $term = (object) $edit;
      taxonomy_term_save($term);    
    }
  }

  node_types_rebuild();
  $types = node_type_get_types();
}

