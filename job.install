<?php
/*
 *      job.install
 *      
 *      Copyright 2014 Sammy Fung <sammy@sammy.hk>
 *      
 */

function job_schema() {
  $schema['company'] = array(
    'description' => t('The table for company information.'),
    'fields' => array(
      'nid' => array(
        'description' => t('The primary identifier for a node.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE),
      'vid' => array(
        'description' => t('The current {node_revisions}.vid version identifier.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0), 
      'phone' => array(
        'description' => t('Phone Number of Company.'),
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => ''),
      'fax' => array(
        'description' => t('Fax Number of Company.'),
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => ''),
      'email' => array(
        'description' => t('Email of Company.'),
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => ''),      
      'website' => array(
        'description' => t('Website URL of Company.'),
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => ''), 
      'person'  => array(
        'description' => t('Contact Person.'),
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => ''),      
      ),
    'indexes' => array(
      'phone' => array('phone'),
      'fax' => array('fax'),
      ),
    'unique keys' => array(
      'vid' => array('vid')
      ),
    'primary key' => array('nid'),
  );  
  $schema['job'] = array(
    'description' => t('The table for job posts.'),
    'fields' => array(
      'nid' => array(
        'description' => t('The primary identifier for a node.'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE),
      'vid' => array(
        'description' => t('The current {node_revisions}.vid version identifier.'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0),
      'company' => array(
        'description' => t('Company Name.'),
        'type' => 'int',
        'unsigned' => TRUE),        
      'application' => array(
        'description' => t('Job Application.'),
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big'),
      'description' => array(
        'description' => t('Job Description.'),
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big'),
      'duedate' => array(
        'description' => t('The Unix timestamp when the job ad is due dated.'),
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0),
      ),
    'indexes' => array(
      'duedate' => array('duedate'),
      ),
    'unique keys' => array(
      'vid' => array('vid')
      ),
    'primary key' => array('nid'),
  );  
  return $schema;
}

function job_enable() {
  // ***OLD***
  // Set default options for content types.
  //variable_set('comment_jobad', 0);
  //variable_set('comment_company', 0);  
  // ******
  
  // If we enable forum at the same time as taxonomy we need to call
  // field_associate_fields() as otherwise the field won't be enabled until
  // hook modules_enabled is called which takes place after hook_enable events.  
  field_associate_fields('taxonomy');

  // Create the company vocabulary if it does not exist.
  $vocabulary = taxonomy_vocabulary_load(variable_get('job_vocabulary_companycategory', 0));  
  if (!$vocabulary) {
    $edit = array(
      'name' => t('Company Category'),
      'machine_name' => 'company_category',
      'description' => t('Category of company'),
      'hierarchy' => 1,
      'module' => 'job',
      'weight' => -10,
    );
    $vocabulary = (object) $edit;
    taxonomy_vocabulary_save($vocabulary);
    variable_set('job_vocabulary_companycategory', $vocabulary->vid);
  } 
  
  // Create the location vocabulary if it does not exist.
  $vocabulary = taxonomy_vocabulary_load(variable_get('job_vocabulary_companylocation', 0));  
  if (!$vocabulary) {
    $edit = array(
      'name' => t('Company Location'),
      'machine_name' => 'company_location',
      'description' => t('Location of company'),
      'hierarchy' => 1,
      'module' => 'job',
      'weight' => -10,
    );
    $vocabulary = (object) $edit;
    taxonomy_vocabulary_save($vocabulary);
    variable_set('job_vocabulary_companylocation', $vocabulary->vid);
  } 
  
  // Add suggested locations to vocabulary.
  /*
  $location = array('Central District', 'Eastern', 'Southern', 'Wan Chai', 'Western', 'Kowloon City', 'Kwun Tong', 'Sham Shui Po', 
    'Wong Tai Sin', 'Yau Tsim Mong', 'Kwai Tsing', 'Northern', 'Sai Kung', 'Shatin', 'Tuen Mun', 'Tai Po', 'Tsuen Wan', 'Yuen Long', 
    'Lautau Island', 'Other Islands', 'Macao', 'China');  
  foreach ($location as $name) {
    $edit = array(
      'name' => t($name),
      'description' => '',
      'parent' => array(0),
      'vid' => $vocabulary->vid,
    );
    $term = (object) $edit;
    taxonomy_term_save($term);
  }
  */

  // Create the job type vocabulary if it does not exist.
  $vocabulary = taxonomy_vocabulary_load(variable_get('job_vocabulary_jobtype', 0));  
  if (!$vocabulary) {
    $edit = array(
      'name' => t('Job Type'),
      'machine_name' => 'job_type',
      'description' => t('Type of job'),
      'hierarchy' => 1,
      'module' => 'job',
      'weight' => -10,
    );
    $vocabulary = (object) $edit;
    taxonomy_vocabulary_save($vocabulary);
    variable_set('job_vocabulary_jobtype', $vocabulary->vid);
  } 
  
  // Add Permanent, Part Time, Contract to this vocabulary.
  $type = array('Permanent','Part Time','Contract');
  foreach ($type as $name) {
    $edit = array(
      'name' => t($name),
      'description' => '',
      'parent' => array(0),
      'vid' => $vocabulary->vid,
    );
    $term = (object) $edit;
    taxonomy_term_save($term);    
  }

  // Create the job category vocabulary if it does not exist.
  $vocabulary = taxonomy_vocabulary_load(variable_get('job_vocabulary_jobcategory', 0));  
  if (!$vocabulary) {
    $edit = array(
      'name' => t('Job Category'),
      'machine_name' => 'job_category',
      'description' => t('Category of job'),
      'hierarchy' => 1,
      'module' => 'job',
      'weight' => -10,
    );
    $vocabulary = (object) $edit;
    taxonomy_vocabulary_save($vocabulary);
    variable_set('job_vocabulary_jobcategory', $vocabulary->vid);
  } 
  
  // Add suggested job category to this vocabulary.
  /*
  $category = array('Accounting', 'Admin & Secretarial', 'Banking & Finance', 'Building & Architectural', 'Business Development', 'Catering', 
    'Customer Service', 'Design', 'Education', 'Engineering', 'Hotel & Tourism', 'Health & Beauty Care', 'Human Resources', 
    'Information Technology', 'Insurance', 'Legal & Company Secretary', 'Logistics', 'Manufacturing', 'Marketing & Public Relations', 
    'Media', 'Medical & Pharmaceutical', 'Merchandising', 'Property & Real Estate', 'Purchasing', 'Sales', 'Translation', 
    'Transportation & Shipping', 'Others');
  foreach ($type as $name) {
    $edit = array(
      'name' => t($name),
      'description' => '',
      'parent' => array(0),
      'vid' => $vocabulary->vid,
    );
    $term = (object) $edit;
    taxonomy_term_save($term);    
  }
  */

  // Ensure the forum node type is available.
  node_types_rebuild();
  $types = node_type_get_types();
  node_add_body_field($types['job']);  
}

